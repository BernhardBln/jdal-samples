<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	default-init-method="init"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	
	<!-- Scans within the base package of the application for @Components to configure as beans -->
	<context:component-scan base-package="org.jdal.samples.springmvc" />
	
		<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- DataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="acquireIncrement" value="3" />
		<property name="minPoolSize" value="2" />
		<property name="maxPoolSize" value="15" />
		<property name="maxIdleTime" value="5" />
		<property name="numHelperThreads" value="5" />

		<property name="idleConnectionTestPeriod" value="10" />
		<property name="autoCommitOnClose" value="false" />
		<property name="preferredTestQuery" value="select 1;" />
		<property name="testConnectionOnCheckin" value="true" />

		<property name="checkoutTimeout" value="60000" />
	</bean>
	
     <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource"/>

	  <property name="jpaDialect">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
     </property>
     <property name="jpaVendorAdapter">
       <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
         <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
       </bean>
     </property>
    </bean>


    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory"/>
      <property name="dataSource" ref="dataSource"/>
    </bean>
    
  <!-- bean post-processor for JPA annotations -->
  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

   <bean id="categoryDao" class="info.joseluismartin.dao.jpa.JpaDao">
   		<constructor-arg value="org.jdal.samples.model.Category"/>
   </bean>
   
   <!-- Dao -->
   <bean id="bookDao" class="info.joseluismartin.dao.jpa.JpaDao">
   		<constructor-arg value="org.jdal.samples.model.Book"/>
   		<property name="criteriaBuilderMap">
   			<map>
   				<entry key="bookFilter" value-ref="bookCriteriaBuilder"/>
   			</map>
   		</property>
   </bean>
   	
   <bean id="bookCriteriaBuilder" class="org.jdal.samples.dao.filter.BookCriteriaBuilder"/>
   
   <!-- Persistent Service -->
   <bean id="bookService" class="info.joseluismartin.logic.PersistentManager">
   		<property name="dao" ref="bookDao"/>
   </bean>
   
    <bean id="categoryService" class="info.joseluismartin.logic.PersistentManager">
   		<property name="dao" ref="categoryDao"/>
   </bean>
   	

	<!-- Tx Advice -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <!-- all methods starting with 'get' and 'load' are read-only -->
      <tx:method name="get*" read-only="true"/>
      <tx:method name="load*" read-only="true"/>
      <!-- other methods use the default transaction settings -->
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>
	
   <aop:config>
    <!-- Make all methods on package service transactional  -->
     <aop:pointcut id="serviceOperation" 
     	expression="execution(* info.joseluismartin.service.*.*(..))"/>
     <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
  </aop:config>
	
</beans>
